/* Settings Container */
.settingsContainer {
  min-height: 100vh;
  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
  padding-bottom: 2rem;
}

/* Header Section */
.headerSection {
  background: white;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  padding: 2rem 0;
  margin-bottom: 2rem;
}

.headerContent {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 2rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 2rem;
}

.backButton {
  background: #6c757d;
  color: white;
  border: none;
  padding: 0.75rem 1.5rem;
  border-radius: 8px;
  cursor: pointer;
  font-size: 1rem;
  font-weight: 500;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.backButton:hover {
  background: #5a6268;
  transform: translateY(-2px);
}

.headerInfo {
  flex: 1;
}

.pageTitle {
  font-size: 2.5rem;
  font-weight: 700;
  color: #2c3e50;
  margin: 0 0 0.5rem 0;
}

.pageSubtitle {
  font-size: 1.1rem;
  color: #6c757d;
  margin: 0;
}

.headerActions {
  display: flex;
  gap: 1rem;
}

.saveButton {
  background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
  color: white;
  border: none;
  padding: 0.75rem 1.5rem;
  border-radius: 8px;
  cursor: pointer;
  font-size: 1rem;
  font-weight: 600;
  transition: all 0.3s ease;
  box-shadow: 0 4px 15px rgba(40, 167, 69, 0.3);
}

.saveButton:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(40, 167, 69, 0.4);
}

.saveButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

/* Messages */
.errorMessage {
  max-width: 1200px;
  margin: 0 auto 2rem auto;
  padding: 0 2rem;
}

.errorMessage p {
  background: #f8d7da;
  color: #721c24;
  padding: 1rem;
  border-radius: 8px;
  border: 1px solid #f5c6cb;
  margin: 0;
}

.successMessage {
  max-width: 1200px;
  margin: 0 auto 2rem auto;
  padding: 0 2rem;
}

.successMessage p {
  background: #d4edda;
  color: #155724;
  padding: 1rem;
  border-radius: 8px;
  border: 1px solid #c3e6cb;
  margin: 0;
}

/* Loading State */
.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 400px;
  text-align: center;
}

.loadingSpinner {
  width: 50px;
  height: 50px;
  border: 5px solid #f3f3f3;
  border-top: 5px solid #007bff;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 1rem;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Tabs */
.tabsContainer {
  max-width: 1200px;
  margin: 0 auto 2rem auto;
  padding: 0 2rem;
}

.tabsWrapper {
  display: flex;
  background: white;
  border-radius: 12px;
  padding: 0.5rem;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  overflow-x: auto;
  gap: 0.5rem;
}

.tab {
  flex: 1;
  min-width: 150px;
  padding: 1rem 1.5rem;
  border: none;
  background: transparent;
  color: #6c757d;
  font-size: 1rem;
  font-weight: 500;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
  white-space: nowrap;
}

.tab:hover {
  background: #f8f9fa;
  color: #495057;
}

.activeTab {
  background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
  color: white !important;
  box-shadow: 0 4px 15px rgba(0, 123, 255, 0.3);
}

/* Settings Content */
.settingsContent {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 2rem;
}

.settingsSection {
  background: white;
  border-radius: 12px;
  padding: 2rem;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  margin-bottom: 2rem;
}

.settingsSection h3 {
  font-size: 1.5rem;
  font-weight: 600;
  color: #2c3e50;
  margin: 0 0 2rem 0;
  padding-bottom: 1rem;
  border-bottom: 2px solid #e9ecef;
}

.settingsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
}

.settingItem {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.settingItem label {
  font-weight: 600;
  color: #495057;
  font-size: 0.95rem;
}

.settingInput,
.settingSelect,
.settingTextarea {
  padding: 0.75rem;
  border: 2px solid #e9ecef;
  border-radius: 8px;
  font-size: 1rem;
  transition: all 0.3s ease;
  background: white;
}

.settingInput:focus,
.settingSelect:focus,
.settingTextarea:focus {
  outline: none;
  border-color: #007bff;
  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
}

.settingTextarea {
  resize: vertical;
  min-height: 80px;
}

.toggleLabel {
  display: flex !important;
  flex-direction: row !important;
  align-items: center;
  gap: 0.75rem;
  cursor: pointer;
  font-weight: 600 !important;
  color: #495057;
}

.settingCheckbox {
  width: 20px;
  height: 20px;
  accent-color: #007bff;
  cursor: pointer;
}

.settingDescription {
  font-size: 0.875rem;
  color: #6c757d;
  margin: 0.25rem 0 0 0;
  font-style: italic;
}

/* Footer Actions */
.footerActions {
  background: white;
  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
  padding: 2rem 0;
  margin-top: 2rem;
}

.footerContent {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 2rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 2rem;
}

.footerInfo {
  flex: 1;
}

.footerInfo p {
  margin: 0 0 0.5rem 0;
  font-size: 0.9rem;
  color: #6c757d;
}

.footerInfo p:last-child {
  margin-bottom: 0;
}

.footerButtons {
  display: flex;
  gap: 1rem;
}

.resetButton {
  background: #6c757d;
  color: white;
  border: none;
  padding: 0.75rem 1.5rem;
  border-radius: 8px;
  cursor: pointer;
  font-size: 1rem;
  font-weight: 500;
  transition: all 0.3s ease;
}

.resetButton:hover {
  background: #5a6268;
  transform: translateY(-2px);
}

/* Access Denied */
.accessDenied {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  text-align: center;
  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
}

.accessDenied h2 {
  color: #dc3545;
  font-size: 2rem;
  margin-bottom: 1rem;
}

.accessDenied p {
  color: #6c757d;
  font-size: 1.1rem;
}

/* Responsive Design */
@media (max-width: 768px) {
  .headerContent {
    flex-direction: column;
    align-items: stretch;
    gap: 1rem;
  }

  .headerActions {
    justify-content: center;
  }

  .pageTitle {
    font-size: 2rem;
    text-align: center;
  }

  .pageSubtitle {
    text-align: center;
  }

  .tabsWrapper {
    flex-direction: column;
    gap: 0.25rem;
  }

  .tab {
    min-width: auto;
    text-align: center;
  }

  .settingsGrid {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }

  .footerContent {
    flex-direction: column;
    align-items: stretch;
    gap: 1.5rem;
  }

  .footerInfo {
    text-align: center;
  }

  .footerButtons {
    justify-content: center;
    flex-wrap: wrap;
  }

  .settingsContainer {
    padding-bottom: 1rem;
  }

  .headerSection,
  .footerActions {
    padding: 1.5rem 0;
  }

  .settingsSection {
    padding: 1.5rem;
    margin-bottom: 1.5rem;
  }
}

@media (max-width: 480px) {
  .headerContent,
  .settingsContent,
  .footerContent {
    padding: 0 1rem;
  }

  .pageTitle {
    font-size: 1.75rem;
  }

  .settingsSection {
    padding: 1rem;
  }

  .settingsSection h3 {
    font-size: 1.25rem;
  }

  .footerButtons {
    flex-direction: column;
  }

  .backButton,
  .saveButton,
  .resetButton {
    padding: 0.625rem 1.25rem;
    font-size: 0.9rem;
  }
}

/* Animation for settings changes */
.settingItem {
  transition: all 0.3s ease;
}

.settingItem:hover {
  transform: translateY(-1px);
}

/* Custom scrollbar for tabs */
.tabsWrapper::-webkit-scrollbar {
  height: 4px;
}

.tabsWrapper::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 2px;
}

.tabsWrapper::-webkit-scrollbar-thumb {
  background: #007bff;
  border-radius: 2px;
}

.tabsWrapper::-webkit-scrollbar-thumb:hover {
  background: #0056b3;
}

/* Loading state for individual settings */
.settingLoading {
  opacity: 0.6;
  pointer-events: none;
}

/* Success animation */
@keyframes successPulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

.successMessage {
  animation: successPulse 0.5s ease-in-out;
}

/* Error animation */
@keyframes errorShake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-5px); }
  75% { transform: translateX(5px); }
}

.errorMessage {
  animation: errorShake 0.5s ease-in-out;
}